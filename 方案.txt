飞控：
	使用卡尔曼滤波算法获取飞机的实时位置
	将实时位置传入PID，控制位置恒定不变





无人机任务二： 快速查找场景中的aruco二维码

无人机先飞至所有树桩的上方，拍摄深度图，使得深度图恰好只能够显示出树桩的位置，保存深度图

图像处理：
	根据图片中的树桩的位置分布，在一张坐标纸上绘制地图，显示树桩的坐标

最短路径规划：
	Floyd算法（存在多层for循环可能使运行速度过慢）
	Dijkstra算法 （堆优化）
	绘制 Vpronoi diagram https://blog.csdn.net/liudongdong19/article/details/83655154

“快速识别”子任务中，参赛队伍需保证在保存二维码(包括深度图及前置相机彩色图)时，二维码应在无人机深度相机视野范围内(小于5米)，如超出深度相机视野，则视为无效。每一根树桩上二维码的位置固定，十个二维码随机出现在十五根树桩。


————————————————————————————————————


7.6  暂时的一些想法


方案2
将比赛任务分为三个部分：

1. 起飞之后先设定飞行高度和时间，沿场景向前飞，使用飞机底部的摄像头获取下方地图信息，分别识别图片中的红色部分和柱子部分，到达设定好的降落点之后（根据airsim的record功能确定），飞回到起飞的位置，此时，可以获得地图信息，获得每个环大致的坐标以及柱子的坐标。
2. 过环部分：
	飞机通过之前识别到的红色位置的坐标飞至可能存在的环的前方，然后使用数字识别和圆环识别	二次验证前方是否为下一个需要穿过的圆环，若不是，则前往下一个坐标处
	（应该考虑到地图识别红色的部分可能存在一些误差）
	（调节HSV阈值优化）
	（如何确定图片中一堆点的中心位置作为飞行所需要的坐标）
3.柱子及二维码检测部分：
	plan A：暴力穿越
		先将飞机飞至降落点上方，实现飞机的定位：穿过圆环后设定为获取地图时的飞行高度，飞至检测到降落区域，飞机定位
		根据之前获取到的地图，传入预先设定好的飞行线路，从第一个柱子前面开始飞行
		在穿越柱子的过程中，调用aruco检测函数，若检测到二维码（函数返回值不为None），则进行拍照，文件读写。
		任务完成之后回到降落点降落
	
	plan B：使用之前的路径规划算法实行飞行（有不确定性）
		根据地图，规划路径信息，飞至第一个柱子前面，传入规划好的路径飞行
	



